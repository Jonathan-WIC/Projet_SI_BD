DROP DATABASE IF EXISTS DB_MonsterPark ;
CREATE DATABASE DB_MonsterPark ;

DROP TABLE IF EXISTS Monster ;
CREATE TABLE Monster (IdMonster INT(10)  AUTO_INCREMENT NOT NULL,
Name VARCHAR(20),
Gender VARCHAR(10),
Age INT(5),
Weight INT(5),
DangerScale ENUM('INOFFENSIVE', 'AGGRESSIVE', 'DANGEROUS', 'MORTAL'),
Regime ENUM('HERBIVORE', 'FRUITARIAN', 'PESCETARIAN', 'OMNIVOROUS', 'CARNIVORE'),
IdMaturity INT(10) NOT NULL,
PRIMARY KEY (IdMonster) ) ENGINE=InnoDB;

DROP TABLE IF EXISTS SubSpecie ;
CREATE TABLE SubSpecie (IdSubSpecie INT(10)  AUTO_INCREMENT NOT NULL,
LibSubSpecie VARCHAR(20),
IdSpecie INT(10) NOT NULL,
IdHabitat INT(10) NOT NULL,
PRIMARY KEY (IdSubSpecie) ) ENGINE=InnoDB;

DROP TABLE IF EXISTS Spiece ;
CREATE TABLE Spiece (IdSpecie INT(10)  AUTO_INCREMENT NOT NULL,
LibSpecie VARCHAR(20),
PRIMARY KEY (IdSpecie) ) ENGINE=InnoDB;

DROP TABLE IF EXISTS Element ;
CREATE TABLE Element (IdElement INT(10)  AUTO_INCREMENT NOT NULL,
LibElement VARCHAR(20),
PRIMARY KEY (IdElement) ) ENGINE=InnoDB;

DROP TABLE IF EXISTS Enclosure ;
CREATE TABLE Enclosure (IdEnclosure INT(10)  AUTO_INCREMENT NOT NULL,
TypeEnclos ENUM('BASIC', 'AVIARY', 'AQUARIUM'),
Price INT(10),
Climate ENUM('FOREST', 'VOLCANIC', 'ARID', 'TROPICAL', 'CAVERNOUS', 'MOUNTAINOUS', 'ARCTIc', 'ISLAND', 'OCEANIC'),
IdSubSpecie INT(10) NOT NULL,
PRIMARY KEY (IdEnclosure) ) ENGINE=InnoDB;

DROP TABLE IF EXISTS Habitat ;
CREATE TABLE Habitat (IdHabitat INT(10)  AUTO_INCREMENT NOT NULL,
LibHabitat VARCHAR(20),
PRIMARY KEY (IdHabitat) ) ENGINE=InnoDB;

DROP TABLE IF EXISTS Player ;
CREATE TABLE Player (IdJoueur INT(10)  AUTO_INCREMENT NOT NULL,
FirstName VARCHAR(20),
LastName VARCHAR(20),
GenderE VARCHAR(10),
BirthDate DATE,
PhoneNumber VARCHAR(10),
Description LONGTEXT,
WebSite VARCHAR(200),
PRIMARY KEY (IdJoueur) ) ENGINE=InnoDB;

DROP TABLE IF EXISTS Equipment ;
CREATE TABLE Equipment (IdEquipment INT(10)  AUTO_INCREMENT NOT NULL,
LibEquipment VARCHAR(20),
PRIMARY KEY (IdEquipment) ) ENGINE=InnoDB;

DROP TABLE IF EXISTS Item ;
CREATE TABLE Item (IdItem INT(10)  AUTO_INCREMENT NOT NULL,
Type VARCHAR(20),
LibItem VARCHAR(20),
PrixItem INT(10),
IdFamilyItem INT(10) NOT NULL,
PRIMARY KEY (IdItem) ) ENGINE=InnoDB;

DROP TABLE IF EXISTS Account ;
CREATE TABLE Account (IdAccount INT(10)  AUTO_INCREMENT NOT NULL,
Pseudo VARCHAR(20),
Email VARCHAR(50),
Password VARCHAR(20),
IP VARCHAR(15),
dateInscription DATETIME,
PRIMARY KEY (IdAccount) ) ENGINE=InnoDB;

DROP TABLE IF EXISTS Transaction ;
CREATE TABLE Transaction (IdTransaction INT(10)  AUTO_INCREMENT NOT NULL,
Amount INT(10),
TransactionDate DATETIME,
PRIMARY KEY (IdTransaction) ) ENGINE=InnoDB;

DROP TABLE IF EXISTS News ;
CREATE TABLE News (IdNews INT(10)  AUTO_INCREMENT NOT NULL,
Title VARCHAR(20),
Picture VARCHAR(20),
Content VARCHAR(200),
IdNewspaper INT(10) NOT NULL,
PRIMARY KEY (IdNews) ) ENGINE=InnoDB;

DROP TABLE IF EXISTS Quest ;
CREATE TABLE Quest (IdQuest INT(10)  AUTO_INCREMENT NOT NULL,
Fee FLOAT(10),
DateDeb DATE,
Duration INT(5),
PRIMARY KEY (IdQuest) ) ENGINE=InnoDB;

DROP TABLE IF EXISTS Inventary ;
CREATE TABLE Inventary (IdInventary INT(10)  AUTO_INCREMENT NOT NULL,
Capacity INT(10),
PRIMARY KEY (IdInventary) ) ENGINE=InnoDB;

DROP TABLE IF EXISTS Parc ;
CREATE TABLE Parc (IdParc INT(10)  AUTO_INCREMENT NOT NULL,
PRIMARY KEY (IdParc) ) ENGINE=InnoDB;

DROP TABLE IF EXISTS Maturity ;
CREATE TABLE Maturity (IdMaturity INT(10)  AUTO_INCREMENT NOT NULL,
LevelMaturity INT(5),
LibMaturity VARCHAR(20),
TimeRequire INT(10),
PRIMARY KEY (IdMaturity) ) ENGINE=InnoDB;

DROP TABLE IF EXISTS Store ;
CREATE TABLE Store (IdStore INT(10)  AUTO_INCREMENT NOT NULL,
StoreName VARCHAR(20),
PRIMARY KEY (IdStore) ) ENGINE=InnoDB;

DROP TABLE IF EXISTS AutomaticTask ;
CREATE TABLE AutomaticTask (IdAutoTask INT(10)  AUTO_INCREMENT NOT NULL,
TaskActions VARCHAR(20),
PRIMARY KEY (IdAutoTask) ) ENGINE=InnoDB;

DROP TABLE IF EXISTS Task ;
CREATE TABLE Task (IdTask INT(10)  AUTO_INCREMENT NOT NULL,
TaskName VARCHAR(20),
Frenquency INT(10),
PRIMARY KEY (IdTask) ) ENGINE=InnoDB;

DROP TABLE IF EXISTS FamilyItem ;
CREATE TABLE FamilyItem (IdFamilyItem INT(10)  AUTO_INCREMENT NOT NULL,
LibFamilyItem VARCHAR(20),
PRIMARY KEY (IdFamilyItem) ) ENGINE=InnoDB;

DROP TABLE IF EXISTS VirtualCurrency ;
CREATE TABLE VirtualCurrency (IdCurrency INT(10)  AUTO_INCREMENT NOT NULL,
AmountCurrent INT(10),
IdJoueur INT(10) NOT NULL,
PRIMARY KEY (IdCurrency) ) ENGINE=InnoDB;

DROP TABLE IF EXISTS Newspapers ;
CREATE TABLE Newspapers (IdNewspaper INT(10)  AUTO_INCREMENT NOT NULL,
Publication DATE,
PRIMARY KEY (IdNewspaper) ) ENGINE=InnoDB;

DROP TABLE IF EXISTS Debuff ;
CREATE TABLE Debuff (idDebuff INT(10)  AUTO_INCREMENT NOT NULL,
LibDebuff VARCHAR(20),
HealthScale INT(10),
HungerScale INT(10),
CleanScale INT(10),
PRIMARY KEY (idDebuff) ) ENGINE=InnoDB;

DROP TABLE IF EXISTS Be ;
CREATE TABLE Be (IdSubSpecie INT(10)  AUTO_INCREMENT NOT NULL,
IdMonster INT(10) NOT NULL,
PRIMARY KEY (IdSubSpecie,
IdMonster) ) ENGINE=InnoDB;

DROP TABLE IF EXISTS Have ;
CREATE TABLE Have (IdElement INT(10)  AUTO_INCREMENT NOT NULL,
IdMonster INT(10) NOT NULL,
PRIMARY KEY (IdElement,
IdMonster) ) ENGINE=InnoDB;

DROP TABLE IF EXISTS Contain ;
CREATE TABLE Contain (IdEnclosure INT(10)  AUTO_INCREMENT NOT NULL,
IdMonster INT(10) NOT NULL,
PRIMARY KEY (IdEnclosure,
IdMonster) ) ENGINE=InnoDB;

DROP TABLE IF EXISTS Equip ;
CREATE TABLE Equip (IdEquipment INT(10)  AUTO_INCREMENT NOT NULL,
IdJoueur INT(10) NOT NULL,
PRIMARY KEY (IdEquipment,
IdJoueur) ) ENGINE=InnoDB;

DROP TABLE IF EXISTS TakeCare ;
CREATE TABLE TakeCare (IdEnclosure INT(10)  AUTO_INCREMENT NOT NULL,
IdJoueur INT(10) NOT NULL,
PRIMARY KEY (IdEnclosure,
IdJoueur) ) ENGINE=InnoDB;

DROP TABLE IF EXISTS Play ;
CREATE TABLE Play (IdJoueur INT(10)  AUTO_INCREMENT NOT NULL,
IdAccount INT(10) NOT NULL,
dateConnexion DATETIME,
PRIMARY KEY (IdJoueur,
IdAccount) ) ENGINE=InnoDB;

DROP TABLE IF EXISTS Particip ;
CREATE TABLE Particip (IdQuest INT(10)  AUTO_INCREMENT NOT NULL,
IdJoueur INT(10) NOT NULL,
ParticipCost INT(10),
PRIMARY KEY (IdQuest,
IdJoueur) ) ENGINE=InnoDB;

DROP TABLE IF EXISTS Compose ;
CREATE TABLE Compose (IdParc INT(10)  AUTO_INCREMENT NOT NULL,
IdEnclosure INT(10) NOT NULL,
PRIMARY KEY (IdParc,
IdEnclosure) ) ENGINE=InnoDB;

DROP TABLE IF EXISTS BuyorSell ;
CREATE TABLE BuyOrSell (IdJoueur INT(10)  AUTO_INCREMENT NOT NULL,
IdParc INT(10) NOT NULL,
IdEnclosure INT(10) NOT NULL,
PRIMARY KEY (IdJoueur,
IdParc,
IdEnclosure) ) ENGINE=InnoDB;

DROP TABLE IF EXISTS Define ;
CREATE TABLE Define (IdTask INT(10)  AUTO_INCREMENT NOT NULL,
IdAutoTask INT(10) NOT NULL,
PRIMARY KEY (IdTask,
IdAutoTask) ) ENGINE=InnoDB;

DROP TABLE IF EXISTS Manage ;
CREATE TABLE Manage (IdJoueur INT(10)  AUTO_INCREMENT NOT NULL,
IdAutoTask INT(10) NOT NULL,
PRIMARY KEY (IdJoueur,
IdAutoTask) ) ENGINE=InnoDB;

DROP TABLE IF EXISTS Supply ;
CREATE TABLE Supply (IdAutoTask INT(10)  AUTO_INCREMENT NOT NULL,
IdStore INT(10) NOT NULL,
StockMax INT(5),
CurrentStock INT(5),
PRIMARY KEY (IdAutoTask,
IdStore) ) ENGINE=InnoDB;

DROP TABLE IF EXISTS Include ;
CREATE TABLE Include (IdInventary INT(10)  AUTO_INCREMENT NOT NULL,
IdItem INT(10) NOT NULL,
PRIMARY KEY (IdInventary,
IdItem) ) ENGINE=InnoDB;

DROP TABLE IF EXISTS DoOrReceive ;
CREATE TABLE DoOrReceive (IdJoueur INT(10)  AUTO_INCREMENT NOT NULL,
IdTransaction INT(10) NOT NULL,
PRIMARY KEY (IdJoueur,
IdTransaction) ) ENGINE=InnoDB;

DROP TABLE IF EXISTS Assign ;
CREATE TABLE Assign (IdTransaction INT(10)  AUTO_INCREMENT NOT NULL,
IdAutoTask INT(10) NOT NULL,
PRIMARY KEY (IdTransaction,
IdAutoTask) ) ENGINE=InnoDB;

DROP TABLE IF EXISTS Gain ;
CREATE TABLE Gain (IdQuest INT(10)  AUTO_INCREMENT NOT NULL,
IdItem INT(10) NOT NULL,
PRIMARY KEY (IdQuest,
IdItem) ) ENGINE=InnoDB;

DROP TABLE IF EXISTS Generate ;
CREATE TABLE Generate (IdNewspaper INT(10)  AUTO_INCREMENT NOT NULL,
IdAutoTask INT(10) NOT NULL,
PRIMARY KEY (IdNewspaper,
IdAutoTask) ) ENGINE=InnoDB;

DROP TABLE IF EXISTS Suffer ;
CREATE TABLE Suffer (IdMonster INT(10)  AUTO_INCREMENT NOT NULL,
idDebuff INT(10) NOT NULL,
PRIMARY KEY (IdMonster,
idDebuff) ) ENGINE=InnoDB;

ALTER TABLE Monster ADD CONSTRAINT FK_Monster_IdMaturity FOREIGN KEY (IdMaturity) REFERENCES Maturity (IdMaturity);

ALTER TABLE SubSpecie ADD CONSTRAINT FK_SubSpecie_IdSpecie FOREIGN KEY (IdSpecie) REFERENCES Spiece (IdSpecie);

ALTER TABLE SubSpecie ADD CONSTRAINT FK_SubSpecie_IdHabitat FOREIGN KEY (IdHabitat) REFERENCES Habitat (IdHabitat);

ALTER TABLE Enclosure ADD CONSTRAINT FK_Enclosure_IdSubSpecie FOREIGN KEY (IdSubSpecie) REFERENCES SubSpecie (IdSubSpecie);

ALTER TABLE Item ADD CONSTRAINT FK_Item_IdFamilyItem FOREIGN KEY (IdFamilyItem) REFERENCES FamilyItem (IdFamilyItem);

ALTER TABLE News ADD CONSTRAINT FK_News_IdNewspaper FOREIGN KEY (IdNewspaper) REFERENCES Newspapers (IdNewspaper);

ALTER TABLE VirtualCurrency ADD CONSTRAINT FK_VirtualCurrency_IdJoueur FOREIGN KEY (IdJoueur) REFERENCES Player (IdJoueur);

ALTER TABLE Be ADD CONSTRAINT FK_Be_IdSubSpecie FOREIGN KEY (IdSubSpecie) REFERENCES SubSpecie (IdSubSpecie);

ALTER TABLE Be ADD CONSTRAINT FK_Be_IdMonster FOREIGN KEY (IdMonster) REFERENCES Monster (IdMonster);

ALTER TABLE Have ADD CONSTRAINT FK_Have_IdElement FOREIGN KEY (IdElement) REFERENCES Element (IdElement);

ALTER TABLE Have ADD CONSTRAINT FK_Have_IdMonster FOREIGN KEY (IdMonster) REFERENCES Monster (IdMonster);

ALTER TABLE Contain ADD CONSTRAINT FK_Contain_IdEnclosure FOREIGN KEY (IdEnclosure) REFERENCES Enclosure (IdEnclosure);

ALTER TABLE Contain ADD CONSTRAINT FK_Contain_IdMonster FOREIGN KEY (IdMonster) REFERENCES Monster (IdMonster);

ALTER TABLE Equip ADD CONSTRAINT FK_Equip_IdEquipment FOREIGN KEY (IdEquipment) REFERENCES Equipment (IdEquipment);

ALTER TABLE Equip ADD CONSTRAINT FK_Equip_IdJoueur FOREIGN KEY (IdJoueur) REFERENCES Player (IdJoueur);

ALTER TABLE TakeCare ADD CONSTRAINT FK_TakeCare_IdEnclosure FOREIGN KEY (IdEnclosure) REFERENCES Enclosure (IdEnclosure);

ALTER TABLE TakeCare ADD CONSTRAINT FK_TakeCare_IdJoueur FOREIGN KEY (IdJoueur) REFERENCES Player (IdJoueur);

ALTER TABLE Play ADD CONSTRAINT FK_Play_IdJoueur FOREIGN KEY (IdJoueur) REFERENCES Player (IdJoueur);

ALTER TABLE Play ADD CONSTRAINT FK_Play_IdAccount FOREIGN KEY (IdAccount) REFERENCES Account (IdAccount);

ALTER TABLE Particip ADD CONSTRAINT FK_Particip_IdQuest FOREIGN KEY (IdQuest) REFERENCES Quest (IdQuest);

ALTER TABLE Particip ADD CONSTRAINT FK_Particip_IdJoueur FOREIGN KEY (IdJoueur) REFERENCES Player (IdJoueur);

ALTER TABLE Compose ADD CONSTRAINT FK_Compose_IdParc FOREIGN KEY (IdParc) REFERENCES Parc (IdParc);

ALTER TABLE Compose ADD CONSTRAINT FK_Compose_IdEnclosure FOREIGN KEY (IdEnclosure) REFERENCES Enclosure (IdEnclosure);

ALTER TABLE BuyOrSell ADD CONSTRAINT FK_BuyOrSell_IdJoueur FOREIGN KEY (IdJoueur) REFERENCES Player (IdJoueur);

ALTER TABLE BuyOrSell ADD CONSTRAINT FK_BuyOrSell_IdParc FOREIGN KEY (IdParc) REFERENCES Parc (IdParc);

ALTER TABLE BuyOrSell ADD CONSTRAINT FK_BuyOrSell_IdEnclosure FOREIGN KEY (IdEnclosure) REFERENCES Enclosure (IdEnclosure);

ALTER TABLE Define ADD CONSTRAINT FK_Define_IdTask FOREIGN KEY (IdTask) REFERENCES Task (IdTask);

ALTER TABLE Define ADD CONSTRAINT FK_Define_IdAutoTask FOREIGN KEY (IdAutoTask) REFERENCES AutomaticTask (IdAutoTask);

ALTER TABLE Manage ADD CONSTRAINT FK_Manage_IdJoueur FOREIGN KEY (IdJoueur) REFERENCES Player (IdJoueur);

ALTER TABLE Manage ADD CONSTRAINT FK_Manage_IdAutoTask FOREIGN KEY (IdAutoTask) REFERENCES AutomaticTask (IdAutoTask);

ALTER TABLE Supply ADD CONSTRAINT FK_Supply_IdAutoTask FOREIGN KEY (IdAutoTask) REFERENCES AutomaticTask (IdAutoTask);

ALTER TABLE Supply ADD CONSTRAINT FK_Supply_IdStore FOREIGN KEY (IdStore) REFERENCES Store (IdStore);

ALTER TABLE Include ADD CONSTRAINT FK_Include_IdInventary FOREIGN KEY (IdInventary) REFERENCES Inventary (IdInventary);

ALTER TABLE Include ADD CONSTRAINT FK_Include_IdItem FOREIGN KEY (IdItem) REFERENCES Item (IdItem);

ALTER TABLE DoOrReceive ADD CONSTRAINT FK_DoOrReceive_IdJoueur FOREIGN KEY (IdJoueur) REFERENCES Player (IdJoueur);

ALTER TABLE DoOrReceive ADD CONSTRAINT FK_DoOrReceive_IdTransaction FOREIGN KEY (IdTransaction) REFERENCES Transaction (IdTransaction);

ALTER TABLE Assign ADD CONSTRAINT FK_Assign_IdTransaction FOREIGN KEY (IdTransaction) REFERENCES Transaction (IdTransaction);

ALTER TABLE Assign ADD CONSTRAINT FK_Assign_IdAutoTask FOREIGN KEY (IdAutoTask) REFERENCES AutomaticTask (IdAutoTask);

ALTER TABLE Gain ADD CONSTRAINT FK_Gain_IdQuest FOREIGN KEY (IdQuest) REFERENCES Quest (IdQuest);

ALTER TABLE Gain ADD CONSTRAINT FK_Gain_IdItem FOREIGN KEY (IdItem) REFERENCES Item (IdItem);

ALTER TABLE Generate ADD CONSTRAINT FK_Generate_IdNewspaper FOREIGN KEY (IdNewspaper) REFERENCES Newspapers (IdNewspaper);

ALTER TABLE Generate ADD CONSTRAINT FK_Generate_IdAutoTask FOREIGN KEY (IdAutoTask) REFERENCES AutomaticTask (IdAutoTask);

ALTER TABLE Suffer ADD CONSTRAINT FK_Suffer_IdMonster FOREIGN KEY (IdMonster) REFERENCES Monster (IdMonster);

ALTER TABLE Suffer ADD CONSTRAINT FK_Suffer_idDebuff FOREIGN KEY (idDebuff) REFERENCES Debuff (idDebuff);
