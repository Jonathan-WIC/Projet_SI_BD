DROP DATABASE IF EXISTS DB_MONSTER_PARK ;
CREATE DATABASE DB_MONSTER_PARK ;
USE DB_MONSTER_PARK ;

DROP TABLE IF EXISTS MONSTER ;
CREATE TABLE MONSTER (
	ID_MONSTER INT(10) AUTO_INCREMENT NOT NULL,
	NAME VARCHAR(50),
	GENDER ENUM('F', 'M'),
	AGE INT(5),
	WEIGHT INT(5),
	DANGER_SCALE ENUM('INOFFENSIVE', 'AGGRESSIVE', 'DANGEROUS', 'MORTAL'),
	HEALTH_STATE INT(10),
	HUNGER_STATE INT(10),
	CLEAN_SCALE INT(10),
	ID_SUB_SPECIE INT(10),
	ID_ENCLOSURE INT(10),
	ID_MATURITY INT(10),
	ID_REGIME INT(10),
	ID_PERSO INT(10),
	PRIMARY KEY (ID_MONSTER)
);

DROP TABLE IF EXISTS SUB_SPECIE ;
CREATE TABLE SUB_SPECIE (
 	ID_SUB_SPECIE INT(10) AUTO_INCREMENT NOT NULL,
	LIB_SUB_SPECIE VARCHAR(50),
	ID_SPECIE INT(10),
    LIB_HABITAT ENUM('JUNGLE', 'OCEAN', 'PLAIN', 'VOLCANO', 'CITY', 'FOREST', 'MOUNTAIN', 'CAVERN', 'MARSH', 'ISLAND', 'TOUNDRA', 'HILL', 'CANYON', 'LAKE', 'BEACH', 'SPACE', 'SKY'),
	PRIMARY KEY (ID_SUB_SPECIE)
);

DROP TABLE IF EXISTS SPECIE ;
CREATE TABLE SPECIE (
	ID_SPECIE INT(10) AUTO_INCREMENT NOT NULL,
	LIB_SPECIE VARCHAR(50),
	PRIMARY KEY (ID_SPECIE)
);

DROP TABLE IF EXISTS ELEMENT ;
CREATE TABLE ELEMENT (	
	ID_ELEMENT INT(10) AUTO_INCREMENT NOT NULL,
	LIB_ELEMENT VARCHAR(50),
	PRIMARY KEY (ID_ELEMENT)
);

DROP TABLE IF EXISTS REGIME ;
CREATE TABLE REGIME (	
	ID_REGIME INT(10) AUTO_INCREMENT NOT NULL,
	LIB_REGIME VARCHAR(50),
	PRIMARY KEY (ID_REGIME)
);

DROP TABLE IF EXISTS ENCLOSURE ;
CREATE TABLE ENCLOSURE (
	ID_ENCLOSURE INT(10) AUTO_INCREMENT NOT NULL,
	TYPE_ENCLOS ENUM('BASIC', 'AVIARY', 'AQUARIUM'),
	CAPACITY_MONSTER INT(10),
	PRICE INT(10),
	CLIMATE ENUM('FOREST', 'VOLCANIC', 'ARID', 'TROPICAL', 'CAVERNOUS', 'MOUNTAINOUS', 'ARCTIC', 'ISLAND', 'OCEANIC'),
	ID_SUB_SPECIE INT(10),
	ID_PARK INT(10),
	PRIMARY KEY (ID_ENCLOSURE)
);

DROP TABLE IF EXISTS PERSO ;
CREATE TABLE PERSO (
	ID_PERSO INT(10) AUTO_INCREMENT NOT NULL,
	FIRST_NAME VARCHAR(50),
	LAST_NAME VARCHAR(50),
	GENDER ENUM('F', 'M'),
	PMONEY INT(10),
	ID_ACCOUNT INT(10),
	PRIMARY KEY (ID_PERSO)
);

DROP TABLE IF EXISTS ITEM ;
CREATE TABLE ITEM (
	ID_ITEM INT(10) AUTO_INCREMENT NOT NULL,
	TYPE_ITEM ENUM('ENTRETIEN', 'FOOD', 'WEAPON', 'ARMOR'),
	LIB_ITEM VARCHAR(50),
	PRIX_ITEM INT(10),
	FAMILY_ITEM ENUM('CONSUMABLE', 'EQUIPMENT'),
	PRIMARY KEY (ID_ITEM)
);

DROP TABLE IF EXISTS ACCOUNT ;
CREATE TABLE ACCOUNT (
	ID_ACCOUNT INT(10) AUTO_INCREMENT NOT NULL,
    GENDER ENUM('F', 'M'),
	BIRTH_DATE DATE,
	PHONE_NUMBER VARCHAR(10),
	DESCRIPTION LONGTEXT,
	WEBSITE VARCHAR(200),
	PSEUDO VARCHAR(50),
	EMAIL VARCHAR(50),
	PASSWORD VARCHAR(50),
	IP VARCHAR(15),
	DATE_INSCRIPTION DATETIME,
	DATE_LAST_CONNEXION DATETIME,
	PRIMARY KEY (ID_ACCOUNT)
);

DROP TABLE IF EXISTS PTRANSACTION ;
CREATE TABLE PTRANSACTION (
	ID_PTRANSACTION INT(10) AUTO_INCREMENT NOT NULL,
	AMOUNT INT(10),
	PTRANSACTION_DATE DATETIME,
	ID_PERSO INT(10) NOT NULL,
	PRIMARY KEY (ID_PTRANSACTION)
);

DROP TABLE IF EXISTS NEWS ;
CREATE TABLE NEWS (
	ID_NEWS INT(10) AUTO_INCREMENT NOT NULL,
	TITLE VARCHAR(100),
	PICTURE VARCHAR(255),
	CONTENT LONGTEXT,
	ID_NEWSPAPER INT(10) NOT NULL,
	PRIMARY KEY (ID_NEWS)
);

DROP TABLE IF EXISTS QUEST ;
CREATE TABLE QUEST (
	ID_QUEST INT(10) AUTO_INCREMENT NOT NULL,
    NAME VARCHAR(100),
	FEE FLOAT(10),
	DATE_DEB DATE,
	DURATION INT(5),
	PRIMARY KEY (ID_QUEST)
);

DROP TABLE IF EXISTS PARK ;
CREATE TABLE PARK (
    ID_PARK INT(10) AUTO_INCREMENT NOT NULL,
    NAME_PARK VARCHAR(50),
    CAPACITY_ENCLOSURE INT(10),
    ID_PERSO INT(10),
    PRIMARY KEY (ID_PARK)
);

DROP TABLE IF EXISTS MATURITY ;
CREATE TABLE MATURITY (
	ID_MATURITY INT(10) AUTO_INCREMENT NOT NULL,
	LIB_MATURITY VARCHAR(50),
	PRIMARY KEY (ID_MATURITY)
);

DROP TABLE IF EXISTS NEWSPAPER ;
CREATE TABLE NEWSPAPER (
	ID_NEWSPAPER INT(10) AUTO_INCREMENT NOT NULL,
	PUBLICATION DATE,
    SUMMARY TEXT,
    STATUS TINYINT,
	PRIMARY KEY (ID_NEWSPAPER)
);

DROP TABLE IF EXISTS LOG_CONNEXION ;
CREATE TABLE LOG_CONNEXION (
    ID_LOG_CONNEXION INT(10) AUTO_INCREMENT NOT NULL,
    ID_ACCOUNT INT(10) NOT NULL,
    ID_PERSO INT(10) NOT NULL,
	DATE_CONNEXION DATETIME,
    PRIMARY KEY (ID_LOG_CONNEXION)
);

DROP TABLE IF EXISTS ASSOC_MONSTER_ELEMENT ;
CREATE TABLE ASSOC_MONSTER_ELEMENT (
    ID_ASSOC_MONSTER_ELEMENT INT(10) AUTO_INCREMENT NOT NULL,
	ID_ELEMENT INT(10) NOT NULL,
	ID_MONSTER INT(10) NOT NULL,
	PRIMARY KEY (ID_ASSOC_MONSTER_ELEMENT)
);

DROP TABLE IF EXISTS ASSOC_PERSO_ENCLOSURE ;
CREATE TABLE ASSOC_PERSO_ENCLOSURE (
    ID_ASSOC_PERSO_ENCLOSURE INT(10) AUTO_INCREMENT NOT NULL,
	ID_ENCLOSURE INT(10) NOT NULL,
	ID_PERSO INT(10) NOT NULL,
	PRIMARY KEY (ID_ASSOC_PERSO_ENCLOSURE)
);

DROP TABLE IF EXISTS ASSOC_PERSO_QUEST ;
CREATE TABLE ASSOC_PERSO_QUEST (
    ID_ASSOC_PERSO_QUEST INT(10) AUTO_INCREMENT NOT NULL,
	ID_QUEST INT(10) NOT NULL,
	ID_PERSO INT(10) NOT NULL,
	QUEST_COST INT(10),
	PRIMARY KEY (ID_ASSOC_PERSO_QUEST)
);

DROP TABLE IF EXISTS PERSO_STOCK_ITEM ;
CREATE TABLE PERSO_STOCK_ITEM (
    ID_PERSO_STOCK_ITEM INT(10) AUTO_INCREMENT NOT NULL,
    ID_PERSO INT(10),
    ID_ITEM INT(10),    
    PRIMARY KEY (ID_PERSO_STOCK_ITEM)
);

DROP TABLE IF EXISTS QUEST_REWARD_ITEM ;
CREATE TABLE QUEST_REWARD_ITEM (
    ID_QUEST_REWARD_ITEM INT(10) AUTO_INCREMENT NOT NULL,
    ID_QUEST INT(10),
    ID_ITEM INT(10),
    PRIMARY KEY (ID_QUEST_REWARD_ITEM)
);

ALTER TABLE MONSTER ADD CONSTRAINT FK_MONSTER_ID_SUB_SPECIE FOREIGN KEY (ID_SUB_SPECIE) REFERENCES SUB_SPECIE (ID_SUB_SPECIE);
ALTER TABLE MONSTER ADD CONSTRAINT FK_MONSTER_ID_ENCLOSURE FOREIGN KEY (ID_ENCLOSURE) REFERENCES ENCLOSURE (ID_ENCLOSURE);
ALTER TABLE MONSTER ADD CONSTRAINT FK_MONSTER_ID_MATURITY FOREIGN KEY (ID_MATURITY) REFERENCES MATURITY (ID_MATURITY);
ALTER TABLE MONSTER ADD CONSTRAINT FK_MONSTER_ID_REGIME FOREIGN KEY (ID_REGIME) REFERENCES REGIME (ID_REGIME);
ALTER TABLE MONSTER ADD CONSTRAINT FK_MONSTER_ID_JOUEUR FOREIGN KEY (ID_PERSO) REFERENCES PERSO (ID_PERSO);
ALTER TABLE SUB_SPECIE ADD CONSTRAINT FK_SUB_SPECIE_ID_SPECIE FOREIGN KEY (ID_SPECIE) REFERENCES SPECIE (ID_SPECIE);
ALTER TABLE ENCLOSURE ADD CONSTRAINT FK_ENCLOSURE_ID_SUB_SPECIE FOREIGN KEY (ID_SUB_SPECIE) REFERENCES SUB_SPECIE (ID_SUB_SPECIE);
ALTER TABLE ENCLOSURE ADD CONSTRAINT FK_ENCLOSURE_ID_PARK FOREIGN KEY (ID_PARK) REFERENCES PARK (ID_PARK);
ALTER TABLE PTRANSACTION ADD CONSTRAINT FK_PTRANSACTION_ID_JOUEUR FOREIGN KEY (ID_PERSO) REFERENCES PERSO (ID_PERSO);
ALTER TABLE NEWS ADD CONSTRAINT FK_NEWS_ID_NEWSPAPER FOREIGN KEY (ID_NEWSPAPER) REFERENCES NEWSPAPER (ID_NEWSPAPER);
ALTER TABLE PARK ADD CONSTRAINT FK_PARK_ID_PERSO FOREIGN KEY (ID_PERSO) REFERENCES PERSO (ID_PERSO);
ALTER TABLE PERSO ADD CONSTRAINT FK_PERSO_ID_ACCOUNT FOREIGN KEY (ID_ACCOUNT) REFERENCES ACCOUNT (ID_ACCOUNT);
ALTER TABLE LOG_CONNEXION ADD CONSTRAINT FK_LOG_CONNEXION_ID_ACCOUNT FOREIGN KEY (ID_ACCOUNT) REFERENCES ACCOUNT (ID_ACCOUNT);
ALTER TABLE LOG_CONNEXION ADD CONSTRAINT FK_LOG_CONNEXION_ID_PERSO FOREIGN KEY (ID_PERSO) REFERENCES PERSO (ID_PERSO);
ALTER TABLE ASSOC_MONSTER_ELEMENT ADD CONSTRAINT FK_ASSOC_MONSTER_ELEMENT_ID_ELEMENT FOREIGN KEY (ID_ELEMENT) REFERENCES ELEMENT (ID_ELEMENT);
ALTER TABLE ASSOC_MONSTER_ELEMENT ADD CONSTRAINT FK_ASSOC_MONSTER_ELEMENT_ID_MONSTER FOREIGN KEY (ID_MONSTER) REFERENCES MONSTER (ID_MONSTER);
ALTER TABLE ASSOC_PERSO_ENCLOSURE ADD CONSTRAINT FK_ASSOC_PERSO_ENCLOSURE_ID_ENCLOSURE FOREIGN KEY (ID_ENCLOSURE) REFERENCES ENCLOSURE (ID_ENCLOSURE);
ALTER TABLE ASSOC_PERSO_ENCLOSURE ADD CONSTRAINT FK_ASSOC_PERSO_ENCLOSURE_ID_JOUEUR FOREIGN KEY (ID_PERSO) REFERENCES PERSO (ID_PERSO);
ALTER TABLE ASSOC_PERSO_QUEST ADD CONSTRAINT FK_ASSOC_PERSO_QUEST_ID_QUEST FOREIGN KEY (ID_QUEST) REFERENCES QUEST (ID_QUEST);
ALTER TABLE ASSOC_PERSO_QUEST ADD CONSTRAINT FK_ASSOC_PERSO_QUEST_ID_JOUEUR FOREIGN KEY (ID_PERSO) REFERENCES PERSO (ID_PERSO);
ALTER TABLE PERSO_STOCK_ITEM ADD CONSTRAINT FK_PERSO_STOCK_ITEM_ID_PERSO FOREIGN KEY (ID_PERSO) REFERENCES PERSO (ID_PERSO);
ALTER TABLE PERSO_STOCK_ITEM ADD CONSTRAINT FK_PERSO_STOCK_ITEM_ID_ITEM FOREIGN KEY (ID_ITEM) REFERENCES ITEM (ID_ITEM);
ALTER TABLE QUEST_REWARD_ITEM ADD CONSTRAINT FK_QUEST_REWARD_ITEM_ID_QUEST FOREIGN KEY (ID_QUEST) REFERENCES QUEST (ID_QUEST);
ALTER TABLE QUEST_REWARD_ITEM ADD CONSTRAINT FK_QUEST_REWARD_ITEM_ID_ITEM FOREIGN KEY (ID_ITEM) REFERENCES ITEM (ID_ITEM);

INSERT INTO `ACCOUNT` (`ID_ACCOUNT`, `GENDER`, `BIRTH_DATE`, `PHONE_NUMBER`, `DESCRIPTION`, `WEBSITE`, `PSEUDO`, `EMAIL`, `PASSWORD`, `IP`, `DATE_INSCRIPTION`, `DATE_LAST_CONNEXION`) VALUES
(1, 'F', '1994-06-22', '0123456789', 'Ma petite ch√©rie d''amour!!!!! <3<3<3<3<<3', NULL, 'titi', 'chevals@poney.unicorn', 'oui', 'non', '2015-01-01 04:24:07', '2015-02-02 19:10:02');

INSERT INTO `PERSO` (`ID_PERSO`, `FIRST_NAME`, `LAST_NAME`, `GENDER`, `PMONEY`, `ID_ACCOUNT`) VALUES
(1, 'Cathy', 'Farrahi', 'F', 1000000, 1);

INSERT INTO `SPECIE` (`ID_SPECIE`, `LIB_SPECIE`) VALUES
(1, 'WYVERN'),
(2, 'ANCIENT_DRAGONS'),
(3, 'CAT'),
(4, 'HERBIVORES');

INSERT INTO `SUB_SPECIE` (`ID_SUB_SPECIE`, `LIB_SUB_SPECIE`, `LIB_HABITAT`, `ID_SPECIE`) VALUES
(1, 'WYVERN_AVIAIRE', 'JUNGLE', 1),
(2, 'WYVERN_AQUA', 'OCEAN', 1),
(3, 'WYVERN_VOLANT', 'PLAIN', 1),
(4, 'FELYNE', 'CITY', 3),
(5, 'MELYNX', 'FOREST', 3),
(6, 'FIRE_DRAGON', 'VOLCANO', 2),
(7, 'MAMIFERE', 'PLAIN', 4),
(8, 'CETACE', 'OCEAN', 4),
(9, 'PRIMATE', 'JUNGLE', 4);

INSERT INTO `ELEMENT` (`ID_ELEMENT`, `LIB_ELEMENT`) VALUES
(1, 'FIRE'),
(2, 'WATER'),
(3, 'THUNDER'),
(4, 'ICE'),
(5, 'WIND'),
(6, 'DRAGON');

INSERT INTO `MATURITY` (`ID_MATURITY`, `LIB_MATURITY`) VALUES
(1, 'EGG'),
(2, 'ADULT');

INSERT INTO `REGIME` (`ID_REGIME`, `LIB_REGIME`) VALUES
(1, 'HERBIVORE'),
(2, 'FRUITARIAN'),
(3, 'PESCETARIAN'),
(4, 'OMNIVOROUS'),
(5, 'CARNIVORE');

INSERT INTO `MONSTER` (`ID_MONSTER`, `NAME`, `GENDER`, `AGE`, `WEIGHT`, `DANGER_SCALE`, `HEALTH_STATE`, `HUNGER_STATE`, `CLEAN_SCALE`, `ID_SUB_SPECIE`, `ID_ENCLOSURE`, `ID_MATURITY`, `ID_REGIME`, `ID_PERSO`) VALUES
(1, 'Cathy', 'F', 20, 47, 'MORTAL', 100, 100, 100, 1, NULL, 2, 1, 1);

INSERT INTO `ASSOC_MONSTER_ELEMENT` (`ID_ELEMENT`, `ID_MONSTER`) VALUES
(2, 1),
(4, 1);

INSERT INTO `NEWSPAPER` (`ID_NEWSPAPER`, `PUBLICATION`, `SUMMARY`, `STATUS`) VALUES
(6, '2015-03-05 00:00:00', 'Que s''est il passe sur votre jeu cette semaine? pour avoir la reponse, consultez vite votre journal!', 1),
(15, '2015-03-04 14:03:35', 'ffzefzfvz\r\nhuguyzef\r\nzefiuzfiuzef\r\nzefzuegfzef\r\nzefzehfz_ef_zehfzehfiozefoizehf', 1),
(19, '2015-03-06 00:00:00', 'lol', 1),
(20, '2015-03-09 13:59:49', 'lol', 0);

INSERT INTO `NEWS` (`ID_NEWS`, `TITLE`, `PICTURE`, `CONTENT`, `ID_NEWSPAPER`) VALUES
(7, 'dazazad', '', 'erzfziejfizuhivebyfivuez fz86fe865ze4f4zef\r\nfzfzfzv e54fzfohfeivoiuee\r\ngergiuhzefyuzeiufiuzejhffzef\r\nfzehfuhyzefghdiyuzcuyoz efzjfziuegfytzfieubcohnzgrfesgf zezefizuhefuyzgefizei fg\r\nzefhzeufyuozaehu nicbauev bfnz vz74  zkebchgefze4c f zeyf z8fze', 6),
(8, 'Titre X', '../Img/Jerome 41 ans protege sa virginite avec une armure 32 bits.jpg', 'erzfziej86fe865ze4f4zef\r\nfzfzfzv e54fzfohfeivoiuee\r\ngergiuhzefyuzeiufiuzejhffzef\r\nfzehfuhyzefghdiyuzcuyoz efzjfziuegfytzfieubcohnzgrfesgf zezefizuhefuyzgefizei fg\r\nzefhzeufyuozaehu nicbauev bfnz vz74  zkebchgefze4c f zeyf z8fze', 6),
(9, 'azerty', '', 'erzfziejfizuhivebyfivuez fz86\r\nfzehfuhyzefghdiyuzcuyoz efzjfziuegfytzfieubcohnzgrfesgf zezefizuhefuyzgefizei fg\r\nzefhzeufyuozaehu nicbauev bfnz vz74  zkebchgefze4c f zeyf z8fze', 6),
(10, 'Le b√É¬©b√É¬© phoque le plus mignon du monde ', '../Img/Bebe_phoque.jpeg', 'Il est trop choupi! regardez comme il est tout mignon quand il est sur le dos :3', 15),
(16, 'Les poneys', '../Img/Les poney c_est pour les tapettes.jpg', ' Les poney √É¬ßa sert √É¬† rien!', 19),
(17, 'koujoukoujoukou', '../Img/koujoukoujoukou.jpg', 'koukou								', 6),
(19, 'koujoukoujoukou', '../Img/koujoukoujoukou.jpg', 'une image vaut mieux que des mots....', 19),
(20, 'OWI', '', 'OWI OWI OWI OWI OWI OWI OWI OWI OWI OWI OWI OWI OWI OWI OWI OWI OWI OWI ', 20);
