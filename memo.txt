Memo :
- Pour gerer les différents role, on pourrait faire un Header par rôle, renvoyant sur les différentes page associées.
- Pour ce qui est des admins, on fait des tableau avec des boutons d'action associé à des requetes (un peu comme optitour).
- pas besoin de pousser trop le design, on fera ça apres.
- bien voir comment fonctionne les session, ça va être le plus chiant :s
- optimiser les requete. ya des millions de données, ça va piquer si on fait des trucs mainstream.
- balancer de l'ajax pour les requetes?
- ne pas oublier la pagination et le tri des données.




Modfication de la BDD :
- 


Les differents users:
gros switch case. le formulaire de co du début on stocke les données dont on a besoin pour les requetes, on voit qui est co et puis on se débrouille quoi.



RAF :	- Verification du login dans l'index. (switch case style biatch!)
	    - Dropdown par themes de page (style on me Monstre et dans le dropdwon on clae toutes les page liées aux monstres);
	    - getAll sur toutes les tables de la base de données => on cale tout dans MD base.
	    - Creer des Model pour affiner les requete on fonction de la personne connectée.
	    - mettre à jour l'index
	    - creer/modifier les pages HTML qui vont bien
	    - Voir pour la pagination
	    - Voir pour le tri dans les tables.
	    - Aligner le bouton de logIn.
	    - un petit peu de CSS quand même



snippet à faire :
template __autoload
template index
template Mod/View
template de layout
template getAll function



Extraction exact des infos selon les requetes :
-Pour les MONSTRES il nous faut : 	- L'ID;
									- Toutes les caractéristique non clef étrangère;
									- l'ID du joueur auquel le monstre appartient;
									- son espece;
									- sa sous-espece;
									- son niveau de maturité;
									- ses éléments